{"version":3,"sources":["context/context.js","components/arrows/arrows.component.jsx","components/inputs/inputs.component.jsx","components/table/table.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableContext","createContext","tableS","setTableS","LocationContext","location","column","row","setLocation","Arrows","useContext","locationHandler","columns","rows","reducer","action","Error","onClick","initialState","Inputs","useState","inputs","setInputs","table","handleChange","event","target","id","parseFloat","value","className","onSubmit","preventDefault","tableHandler","alert","htmlFor","type","onChange","Table","columnElements","elements","i","concat","rowElements","App","setTable","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ad81f09.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const TableContext = createContext({\r\n      tableS:null,\r\n      setTableS:()=>{},\r\n})\r\nexport const LocationContext = createContext({\r\n      location:{\r\n            column:null,\r\n            row:null\r\n      },\r\n      setLocation:()=>{}\r\n})","import React, { useContext } from 'react';\r\n\r\nimport './arrows.styles.css';\r\nimport { LocationContext, TableContext } from '../../context/context';\r\n\r\nconst Arrows = () => {\r\n    const { location, locationHandler } = useContext(LocationContext)\r\n    const { tableS: { columns, rows } } = useContext(TableContext)\r\n    const reducer = (action) => {\r\n        switch (action) {\r\n            case \"RIGHT\":\r\n                return location.column + 1 < columns &&\r\n                    locationHandler(location.column + 1, location.row)\r\n            case \"LEFT\":\r\n                return location.column > 0 &&\r\n                    locationHandler(location.column - 1, location.row)\r\n            case \"UP\":\r\n                return location.row > 0 &&\r\n                    locationHandler(location.column, location.row - 1)\r\n            case \"DOWN\":\r\n                return location.row + 1 < rows &&\r\n                    locationHandler(location.column, location.row + 1)\r\n            default:\r\n                throw new Error('unvalid action')\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p onClick={() => reducer(\"UP\")}>up &uarr; </p>\r\n            <p onClick={() => reducer(\"DOWN\")}>down &darr; </p>\r\n            <p onClick={() => reducer('LEFT')}>left &larr; </p>\r\n            <p onClick={() => reducer('RIGHT')}> right &rarr; </p>\r\n        </div>\r\n    )\r\n}\r\nexport default Arrows;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport './inputs.styles.css';\r\nimport { TableContext } from '../../context/context';\r\nconst initialState = {\r\n    columns: 0,\r\n    rows: 0\r\n}\r\nconst Inputs = () => {\r\n\r\n    const [inputs, setInputs] = useState(initialState)\r\n\r\n    const table = useContext(TableContext)\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (inputs.columns > 0 && inputs.rows > 0) {\r\n            table.tableHandler(inputs.columns, inputs.rows)\r\n        } else {\r\n            setInputs(initialState)\r\n            alert('VALUES MUST BE ABOVE ZEROOOO!!! (try again)')\r\n        }\r\n    }\r\n    const handleChange = event => {\r\n        setInputs({\r\n            ...inputs,\r\n            [event.target.id]: parseFloat(event.target.value)\r\n        })\r\n    }\r\n    return (\r\n        <form className='form-style' onSubmit={handleSubmit}>\r\n            <label htmlFor='columns'>column</label>\r\n            <input type='number' id='columns' value={inputs.columns} onChange={handleChange} />\r\n            <label htmlFor='rows'>row</label>\r\n            <input type='number' id='rows' value={inputs.rows} onChange={handleChange} />\r\n            <button type='submit'>Create Table</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Inputs;","import React, { useContext } from 'react';\r\n\r\nimport './table.styles.css';\r\nimport { TableContext } from '../../context/context';\r\nimport { LocationContext } from '../../context/context';\r\n\r\nconst Table = () => {\r\n  const { location } = useContext(LocationContext)\r\n  const table = useContext(TableContext)\r\n  const columns = table.tableS.columns\r\n  const rows = table.tableS.rows\r\n  const columnElements = () => {\r\n    let elements = [];\r\n    for (let i = 0; i < columns; i++) {\r\n      i === location.column ?\r\n        elements = elements.concat(<td id='selected-column' />) :\r\n        elements = elements.concat(<td id={location.column}/>)\r\n    }\r\n    return elements\r\n  }\r\n  const rowElements = () => {\r\n    let elements = [];\r\n    for (let i = 0; i < rows; i++) {\r\n      i === location.row ? elements = elements.concat(<tr id='selected-row'>{columnElements()}</tr>) :\r\n        elements = elements.concat(<tr id={location.row}>{columnElements()}</tr>)\r\n    }\r\n    return elements;\r\n  }\r\n  return (\r\n    <table>\r\n    <thead>\r\n      {rowElements()}\r\n    </thead>  \r\n    </table>\r\n  )\r\n}\r\nexport default Table;\r\n// you have two objects here\r\n// location which have the location of the selected cell (column,row)\r\n// location which have the number of columns and rows of the table\r\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport Arrows from './components/arrows/arrows.component';\nimport Inputs from './components/inputs/inputs.component';\nimport Table from './components/table/table.component';\nimport { TableContext, LocationContext } from './context/context';\n\nfunction App() {\n  const [tableS, setTable] = useState({\n    columns: 0,\n    rows: 0\n  })\n  const [location, setLocation] = useState({\n    column: 0,\n    row: 0\n  })\n  const tableHandler = (columns, rows) => {\n    setTable({\n      columns,\n      rows\n    })\n  }\n  const locationHandler = (column, row) => {\n    setLocation({\n      column,\n      row\n    })\n  }\n  return (\n    <TableContext.Provider value={{ tableS, tableHandler }}>\n      <div className='flex-container'>\n        <Inputs />\n        <LocationContext.Provider value={{ location, locationHandler }}>\n          <Arrows />\n          <Table />\n        </LocationContext.Provider>\n\n      </div>\n    </TableContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}